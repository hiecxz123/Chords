# ChordsEngine
# set CMake minimum version
cmake_minimum_required (VERSION 3.10.2)

# ï¿½ï¿½ï¿½Ã»ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿
set(PROJECT_VERSION "0.0.1.0" CACHE STRING "Ä¬ï¿½Ï°æ±¾ï¿½ï¿½")
# 1. ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½ï¿½ÐµÄ¿ï¿½ï¿½ï¿½
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

set(PROJECT_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR})

set(BINARY_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/bin)

# ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿ï¿½ï¿½ï¿½Æºï¿½ï¿½ï¿½?ï¿½ï¿½ PROJECT_NAME ï¿½ï¿½È¡ï¿½ï¿½Ä¿ï¿½ï¿½ï¿½ï¿½
project(GameEngine)

add_subdirectory(engine)
add_subdirectory(3rdParty/spdlog)


# print project name
# Ò²ï¿½ï¿½ï¿½ï¿½Í¨ï¿½ï¿½set(PROJECT_NAME set_test) ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½PROJECT_NAMEï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
message ("project name: ${PROJECT_NAME}")
# ï¿½Ó¶ï¿½ï¿½ï¿½CMakeLists.txtï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½projectï¿½ï¿½ï¿½Æ´æ´¢ï¿½Ú±ï¿½ï¿½ï¿½CMAKE_PROJECT_NAMEï¿½ï¿½
message("cmake project name: ${CMAKE_PROJECT_NAME}")
# ï¿½ï¿½Ó¡ï¿½ï¿½Ä¿Â·ï¿½ï¿½ï¿½ï¿½CMakeLists.txtï¿½Ä¼ï¿½ï¿½ï¿½ï¿½ï¿½Â·ï¿½ï¿½
message("project source dir: ${PROJECT_SOURCE_DIR}")

message("project name source dir: ${${PROJECT_NAME}_SOURCE_DIR}")
# project is top level: ON
message("project is top level: ${PROJECT_IS_TOP_LEVEL}")
# project name is top level: ON
message("project name is top level: ${${PROJECT_NAME}_IS_TOP_LEVEL}") 

# message("lib path: ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}") 

# message("CMAKE_INSTALL_PREFIX:::" ${CMAKE_INSTALL_PREFIX})

# ï¿½ï¿½ï¿½Ã±ï¿½ï¿½ï¿½normal_varï¿½ï¿½ÖµÎªa;b;c
set (normal_var a b c)
# ï¿½ï¿½ï¿½ï¿½ï¿??>>> value = a;b;c
message (">>> value = ${normal_var}")
# ï¿½ï¿½ï¿½Ã±ï¿½ï¿½ï¿½Îªï¿½ï¿½
set (normal_var) 
# ï¿½ï¿½ï¿½ï¿½ï¿??>>> value = 
message (">>> value = ${normal_var}")

# ï¿½ï¿½ï¿½åº¯ï¿½ï¿½
function(func)
    # ï¿½ï¿½Ó¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¾ï¿½ï¿½
    # STATUS:ï¿½ï¿½ï¿½ï¿½ï¿½Ú±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ðµï¿½Debugï¿½ï¿½Ï¢;
    # FATAL_ERROR:ï¿½ï¿½ï¿½ï¿½CMake Error,ï¿½ï¿½Í£Ö¹ï¿½ï¿½ï¿½ï¿½ÏµÍ³ï¿½Ä¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    message(STATUS "call func")
    # ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¾ï¿½ï¿??
    # CMAKE_SIZEOF_VOID_P ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È¡Voidï¿½ï¿½ï¿½ÍµÄ´ï¿½Ð¡
    if (CMAKE_SIZEOF_VOID_P EQUAL 4)
        message(STATUS "X86")   # 32Î»ÏµÍ³ï¿½ï¿½ï¿½ï¿½Ó¡X86
    elseif (CMAKE_SIZEOF_VOID_P EQUAL 8)
        message(STATUS "X64")   # 32Î»ÏµÍ³ï¿½ï¿½ï¿½ï¿½Ó¡X64
    endif()
endfunction(func)
# ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ã·ï¿½Ê½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö´ï¿½Ð¡Ð´
func()
FUnc()
fuNC()


